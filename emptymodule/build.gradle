if (isRealse.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'android-aspectjx'



android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion


    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled false
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    sourceSets
            {
                main
                        {
                            if (isRealse.toBoolean()) {
                                manifest.srcFile 'src/main/realse/AndroidManifest.xml'
                            } else {
                                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                            }
                        }
            }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
   

}


dependencies {
    compile  project(':basic_business_component')

    //引入Arouter编译器
    annotationProcessor rootProject.ext.annotationCompiler["arouter-compiler"]
    annotationProcessor project(rootProject.ext.annotationCompiler["apifactory-compile"])
}
